// 3. 숨바꼭질2
//런타임에러(OutofBounds)
#if 0
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#define MAX (100000+1)

int N, K; //input
int time, method; //output

typedef struct node {
	int data;
	int level;
}Node_t;
 Node_t Queue[MAX]; //큐 크기 수정
int front, rear;

void BFS_2(void) {
	Node_t curr = { 0 };
	int n = 0;
	int l = 0;
	int minlevel = 0x0fffffff;
	front = rear = 0;

	Queue[rear++] = (Node_t){ N, 0 }; //level 0

	while (front != rear) {
		curr = Queue[front++];
		n = curr.data;
		l = curr.level;
		//printf("Queue data: %d, level: %d\n", n, l);
		
		if (n>=MAX || n<0) continue;
		if (rear>=MAX || front>=MAX) continue;

		if (n == K && l <= minlevel) {
				minlevel = l;
				time = l;
				method++;
		}
		if (l > minlevel) return;

		Queue[rear++] = (Node_t){ n + 1, l + 1 };
		Queue[rear++] = (Node_t){ n - 1, l + 1 };
		Queue[rear++] = (Node_t){ 2 * n, l + 1 };
	}
}

int main(void) {
	time = method = 0;

	(void)scanf("%d %d", &N, &K); // inputData

	if (N < K) {
		BFS_2(); //time, method 계산
	}
	else {
		time = N - K;
		method = 1;
	}

	printf("%d\n%d\n", time, method);
	return 0;
}
#endif
